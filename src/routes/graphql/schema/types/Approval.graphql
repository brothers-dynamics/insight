# Definition
type Approval {
  id: Int!
  document: Document!
  status: ApprovalStatus!
  handler: User
  message: String

  createdAt: String!
  updatedAt: String!
}
# Queries
extend type Query {
  GetApproval(id: Int!): Approval
  ListApprovals: [Approval!]!
}
# Mutations
union ApprovalMutationResponse = Approval | Error
input ApprovalMutationUpdateInput {
  document: Int!
  status: ApprovalStatus!
  message: String
}
input ApprovalMutationCreateInput {
  document: Int!
}
extend type Mutation {
  CreateApproval(input: ApprovalMutationCreateInput!): ApprovalMutationResponse!
  UpdateApproval(input: ApprovalMutationUpdateInput!): ApprovalMutationResponse!
  DeleteApproval(id: Int!): ApprovalMutationResponse!
}
